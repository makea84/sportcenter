# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-24 13:15
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('idClassroom', models.AutoField(db_column=b'idClassroom', primary_key=True, serialize=False, verbose_name=b'Aula')),
                ('name', models.CharField(db_column=b'name', default=b'', help_text=b'Solo letras, numeros y espacios.', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code=b'invalid_name', message=b'Solo letras, puntuacion y numeros, maximo 200.', regex=b'^([0-9a-zA-Z][, .:]*){1,200}$')], verbose_name=b'Nombre')),
                ('width', models.DecimalField(db_column=b'width', decimal_places=2, default=0.0, help_text=b'1 a 5 parte entera, 2 parte decimal.', max_digits=7, validators=[django.core.validators.RegexValidator(code=b'invalid_width', message=b'1 a 5 parte entera y 2 parte decimal.', regex=b'^(([0-9]{1,5}\\.[0-9]{1,2})|([0-9]{1,5}))$')], verbose_name=b'Ancho')),
                ('length', models.DecimalField(db_column=b'length', decimal_places=2, default=0.0, help_text=b'1 a 5 parte entera, 2 parte decimal.', max_digits=7, validators=[django.core.validators.RegexValidator(code=b'invalid_length', message=b'1 a 5 parte entera y 2 parte decimal.', regex=b'^(([0-9]{1,5}\\.[0-9]{1,2})|([0-9]{1,5}))$')], verbose_name=b'Largo')),
                ('avaible', models.CharField(db_column=b'avaible', max_length=2, validators=[django.core.validators.RegexValidator(code=b'invalid_avaible', message=b'Solo si o No.', regex=b'^(Si|No)$')], verbose_name=b'Disponible')),
                ('description', models.TextField(db_column=b'description', default=b'', help_text=b'Solo letras, numeros y espacios.', validators=[django.core.validators.RegexValidator(code=b'invalid_description', message=b'Solo letras, puntuacion y numeros, maximo 500.', regex=b'^([0-9a-zA-Z][, .:]*){1,500}$')], verbose_name=b'Descripcion')),
                ('image', models.ImageField(db_column=b'image', help_text=b'jpg,bmp,svg o png.', upload_to=b'classroom/', verbose_name=b'Imagen')),
                ('capacity', models.CharField(db_column=b'capacity', default=1, help_text=b'Minimo 1, maximo 99.', max_length=2, validators=[django.core.validators.RegexValidator(code=b'invalid_capacity', message=b'Entre 1 y 99.', regex=b'^([1-9]|[1-9][0-9])$')], verbose_name=b'Capacidad')),
            ],
            options={
                'db_table': 'Classroom',
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('idCourse', models.AutoField(db_column=b'idCourse', primary_key=True, serialize=False, verbose_name=b'Curso')),
                ('name', models.CharField(db_column=b'name', default=b'', help_text=b'Solo letras, numeros y espacios.', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code=b'invalid_name', message=b'Solo letras, puntuacion y numeros, maximo 200.', regex=b'^([0-9a-zA-Z][, .:]*){1,200}$')], verbose_name=b'Nombre')),
                ('description', models.TextField(db_column=b'description', default=b'', help_text=b'Solo letras, numeros y espacios.', validators=[django.core.validators.RegexValidator(code=b'invalid_description', message=b'Solo letras, puntuacion y numeros, maximo 500.', regex=b'^([0-9a-zA-Z][, .:]*){1,500}$')], verbose_name=b'Descripcion')),
                ('day', models.CharField(choices=[(b'Lunes', b'Lunes'), (b'Martes', b'Martes'), (b'Miercoles', b'Miercoles'), (b'Jueves', b'Jueves'), (b'Viernes', b'Viernes')], db_column=b'day', default=b'Lunes', max_length=100, verbose_name=b'Dia')),
                ('hour', models.CharField(db_column=b'hour', default=b'09:00', help_text=b'09:00 a 20:00 horas exactas.', max_length=5, validators=[django.core.validators.RegexValidator(code=b'invalid_hour', message=b'de 09:00 a 20:00, horas exactas.', regex=b'^(09|1[0-9]|20):00$')], verbose_name=b'Hora')),
                ('duration', models.CharField(db_column=b'duration', default=b'01:00', help_text=b'01-09 horas:00.', max_length=5, validators=[django.core.validators.RegexValidator(code=b'invalid_duration', message=b'hh:mm,mm = 01:00-09:00 min 01:00 max 09:00 horas.', regex=b'^(0[1-9]):00$')], verbose_name=b'Duracion')),
                ('cost', models.DecimalField(db_column=b'cost', decimal_places=2, default=0.0, help_text=b'1 a 8 parte entera, 2 parte decimal.', max_digits=10, validators=[django.core.validators.RegexValidator(code=b'invalid_cost', message=b'1 a 8 parte entera y 2 parte decimal.', regex=b'^(([0-9]{1,8}\\.[0-9]{1,2})|([0-9]{1,8}))$')], verbose_name=b'Coste')),
            ],
            options={
                'db_table': 'Course',
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('idParticipation', models.AutoField(db_column=b'idParticipation', primary_key=True, serialize=False, verbose_name=b'Participacion')),
                ('course', models.ForeignKey(db_column=b'course', on_delete=django.db.models.deletion.CASCADE, related_name='participation_course', to='classroom.Course', verbose_name=b'Curso')),
                ('user', models.ForeignKey(db_column=b'user', on_delete=django.db.models.deletion.CASCADE, related_name='participation_user', to=settings.AUTH_USER_MODEL, verbose_name=b'Usuario')),
            ],
            options={
                'db_table': 'Participation',
                'verbose_name': 'Participacion',
                'verbose_name_plural': 'Participaciones',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('idPlace', models.AutoField(db_column=b'idPlace', primary_key=True, serialize=False, verbose_name=b'Lugar')),
                ('classroom', models.ForeignKey(db_column=b'classroom', on_delete=django.db.models.deletion.CASCADE, related_name='place_classroom', to='classroom.Classroom', verbose_name=b'Clase')),
                ('course', models.ForeignKey(db_column=b'course', on_delete=django.db.models.deletion.CASCADE, related_name='place_course', to='classroom.Course', verbose_name=b'Curso')),
            ],
            options={
                'db_table': 'Place',
                'verbose_name': 'Lugar',
                'verbose_name_plural': 'Lugares',
            },
        ),
    ]
